from django.db import models
from django.db.models.signals import post_delete
from django.dispatch import receiver
import os

LAYER_CHOICES = [
    (1, '1-—Å–ª–æ–π–Ω—ã–π'),
    (2, '2-—Å–ª–æ–π–Ω—ã–π'),
    (3, '3-—Å–ª–æ–π–Ω—ã–π'),
]

class ProductFormType(models.Model):
    name = models.CharField(max_length=100)

    def __str__(self):
        return self.name

class Product(models.Model):
    name = models.CharField(max_length=255)
    volume = models.PositiveIntegerField(help_text="–û–±—ä—ë–º –≤ –ª–∏—Ç—Ä–∞—Ö")
    layers = models.PositiveSmallIntegerField(choices=LAYER_CHOICES)
    length = models.PositiveIntegerField(help_text="–î–ª–∏–Ω–∞ –≤ —Å–º")
    width = models.PositiveIntegerField(help_text="–®–∏—Ä–∏–Ω–∞ –≤ —Å–º")
    height = models.PositiveIntegerField(help_text="–í—ã—Å–æ—Ç–∞ –≤ —Å–º")
    diameter = models.PositiveIntegerField(help_text="–î–∏–∞–º–µ—Ç—Ä –∫—Ä—ã—à–∫–∏ –≤ —Å–º")
    thickness = models.CharField(max_length=20, help_text="–¢–æ–ª—â–∏–Ω–∞ —Å—Ç–µ–Ω–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä '5‚Äì7 –º–º'")
    price = models.PositiveIntegerField(help_text="–¶–µ–Ω–∞ –≤ —Å–æ–º–æ–Ω–∏")
    description = models.TextField(blank=True)
    image = models.ImageField(upload_to='products/', blank=True, null=True)
    in_stock = models.BooleanField(default=True)
    form_type = models.ForeignKey(ProductFormType, on_delete=models.SET_NULL, null=True, blank=True)

    def __str__(self):
        return f"{self.name} ({self.volume} –ª)"

class ProductImage(models.Model):
    product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name='images')
    image = models.ImageField(upload_to='products/gallery/')

    def __str__(self):
        return f"–§–æ—Ç–æ –¥–ª—è {self.product.name}"

class OrderRequest(models.Model):
    product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name='orders', null=True, blank=True)
    name = models.CharField(max_length=100)
    phone = models.CharField(max_length=30)
    email = models.EmailField(blank=True)
    message = models.TextField(blank=True)
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        if self.product:
            return f"–ó–∞—è–≤–∫–∞ –æ—Ç {self.name} –Ω–∞ {self.product.name}"
        return f"–ó–∞—è–≤–∫–∞ –æ—Ç {self.name} (–±–µ–∑ —Ç–æ–≤–∞—Ä–∞)"

# üî• –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤

@receiver(post_delete, sender=Product)
def delete_product_image(sender, instance, **kwargs):
    if instance.image and os.path.isfile(instance.image.path):
        os.remove(instance.image.path)

@receiver(post_delete, sender=ProductImage)
def delete_gallery_image(sender, instance, **kwargs):
    if instance.image and os.path.isfile(instance.image.path):
        os.remove(instance.image.path)
